{"version":3,"sources":["services/persons.js","components/PeopleList.js","components/SearchField.js","components/FormField.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","serviceTool","getAll","axios","get","then","response","data","addPerson","newPerson","post","res","removePerson","id","delete","updatePerson","person","put","PeopleList","props","people","search","filter","note","name","toLowerCase","includes","content","map","index","className","phone","onClick","remove","SearchField","htmlFor","type","onChange","handleSearch","FormField","onSubmit","required","value","newName","handleNewPerson","newNumber","handleNewNumber","Notification","message","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","errorMessage","setErrorMessage","useEffect","showMessage","messsage","setTimeout","event","target","preventDefault","taken","forEach","window","confirm","returnedPerson","p","catch","error","concat","id_num","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d093d870.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'https://nameless-sands-07409.herokuapp.com/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst addPerson = (newPerson) => {\r\n    const request = axios.post(baseUrl, newPerson);\r\n    return request.then(res => res.data);\r\n}\r\n\r\nconst removePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(res => res.data);\r\n}\r\n\r\nconst updatePerson = (id, person) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, person);\r\n    return request.then(res => res.data);\r\n}\r\n\r\nconst serviceTool = {\r\n    getAll,\r\n    addPerson,\r\n    removePerson,\r\n    updatePerson\r\n}\r\n\r\nexport default serviceTool;","import React from 'react'\r\n\r\nconst PeopleList = (props) => {\r\n    let people = props.people;\r\n  \r\n    if (props.search !== '') {\r\n        people = props.people.filter(note => note.name.toLowerCase().includes(props.search.toLowerCase()));\r\n    }\r\n  \r\n    const content = people.map((person , index) => \r\n      <div key = {index} className='personsList'>\r\n        <span>{person.name} {person.phone} </span>\r\n        <button key = {person.id} onClick = {() => props.remove(person.id, person.name)}>delete</button>\r\n      </div>\r\n    );\r\n  \r\n    return (\r\n      <>\r\n        <h2>Numbers</h2>\r\n        {content}\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default PeopleList","import React from 'react'\r\n\r\nconst SearchField = (props) => {\r\n    return (\r\n      <>\r\n        <label htmlFor=\"filter-field\">Search for: </label>\r\n        <input type='text' name='filter-field' onChange = {props.handleSearch}></input>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default SearchField","import React from 'react'\r\n\r\nconst FormField = (props) => {\r\n    return (\r\n      <>\r\n      <h2>Add or Update Entries</h2>\r\n        <form onSubmit = {props.addPerson}>\r\n          <div>\r\n            Name: <input required value={props.newName} onChange={props.handleNewPerson}/>\r\n            <br></br>\r\n            <br></br>\r\n            Number: <input required value = {props.newNumber} onChange={props.handleNewNumber}/>\r\n          </div>\r\n          <br></br>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default FormField","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className='notif' >\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect} from 'react';\nimport serviceTool from './services/persons';\nimport PeopleList from './components/PeopleList'\nimport SearchField from './components/SearchField';\nimport FormField from './components/FormField';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const  [search, setSearch] = useState('');\n  const [errorMessage, setErrorMessage] = useState()\n\n  useEffect(() => {\n    serviceTool.getAll().then(response => setPersons(response))\n  }, [])\n\n  const handleNewPerson = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNewNumber= (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const newPerson = {\n      name: newName,\n      phone: newNumber\n    }\n    \n    let taken = false;\n    persons.forEach((person) => {\n      if (person.name === newName) {\n        if (window.confirm(`Update ${person.name} ?`)) {\n          serviceTool.updatePerson(person.id, newPerson)\n          .then((returnedPerson) => {\n            setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson));\n            showMessage(`Updated ${person.name}`)\n          })\n          .catch(error => {\n            showMessage(error.response.data.error)\n          })\n        } \n        taken = true;\n      }\n    })\n\n    if (!taken) {\n      serviceTool.addPerson(newPerson)\n      .then(res => {\n        setPersons(persons.concat(res));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        showMessage(`Added ${res.name}`)\n      })\n      .catch(error => {\n        showMessage(error.response.data.error)\n      })\n    }\n  }\n\n  const showMessage = (messsage) => {\n    setErrorMessage(messsage);\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 3000)\n  }\n  \n  const handleSearch = (event) => {\n    setSearch(event.target.value);\n  }\n\n  const handleDelete = (id_num, person) => {\n    if (window.confirm(`Delete ${person} ?`)) {\n      serviceTool.removePerson(id_num).then((res) => {\n        setPersons(persons.filter(n => n.id !== id_num));\n        showMessage(`Deleted ${person}`)\n      }) \n    }\n  }\n\n  return (\n    <div className='main-container'>\n      <h1>Phonebook</h1>\n      <Notification message={errorMessage} />\n      <SearchField handleSearch = {handleSearch}/>\n      <FormField\n        addPerson = {addPerson}\n        newName = {newName}\n        newNumber = {newNumber}\n        handleNewPerson = {handleNewPerson}\n        handleNewNumber = {handleNewNumber}\n      />\n      <PeopleList people = {persons} search = {search} remove = {handleDelete}></PeopleList>\n    </div>\n  )\n}\n\nexport default App;","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}